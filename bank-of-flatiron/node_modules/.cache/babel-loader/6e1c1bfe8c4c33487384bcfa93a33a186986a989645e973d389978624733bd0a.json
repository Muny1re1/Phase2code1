{"ast":null,"code":"var _jsxFileName = \"/home/andymichael/moringaphase2codechallenges/Phase2code1/bank-of-flatiron/src/components/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Button from \"./Transaction\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Form() {\n  _s();\n  const formContents = [{\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: \"\"\n  }];\n  const [updatedFormContents, setFormContents] = useState(formContents);\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormContents(prevState => {\n      const updatedFormContents = prevState.map(form => ({\n        ...form,\n        [name]: value\n      }));\n      const newContents = newArray.push(updatedFormContents);\n      return updatedFormContents;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"date\",\n        placeholder: \"mm/dd/yy\",\n        value: updatedFormContents[0].date,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        placeholder: \"Description\",\n        value: updatedFormContents[0].description,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"category\",\n        placeholder: \"Category\",\n        value: updatedFormContents[0].category,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"amount\",\n        placeholder: \"Amount\",\n        value: updatedFormContents[0].amount,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      updatedFormContents: updatedFormContents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n}\n_s(Form, \"aINF3mBZnx+D8fJs5oY2aY/MrfE=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","_s","formContents","date","description","category","amount","updatedFormContents","setFormContents","handleInputChange","event","name","value","target","prevState","map","form","newContents","newArray","push","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["/home/andymichael/moringaphase2codechallenges/Phase2code1/bank-of-flatiron/src/components/Form.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"./Transaction\";\n\nfunction Form() {\n   const formContents = [{\n      date: \"\",\n      description: \"\",\n      category: \"\",\n      amount: \"\"\n   }];\n   const [updatedFormContents, setFormContents] = useState(formContents);\n\n   const handleInputChange = (event)=>{\n      const { name, value } = event.target;\n      setFormContents(prevState => {\n         const updatedFormContents = prevState.map(form => ({\n            ...form,\n            [name]: value\n         }));\n         const newContents = newArray.push(updatedFormContents)\n         return updatedFormContents;\n      });\n   }\n\n   return (\n      <>\n         <form className=\"form\">\n            <strong>Date:</strong><input type=\"date\" name=\"date\" placeholder=\"mm/dd/yy\" value={updatedFormContents[0].date} onChange={handleInputChange}/>\n            <input type=\"text\" name=\"description\" placeholder=\"Description\" value={updatedFormContents[0].description} onChange={handleInputChange}/>\n            <input type=\"text\" name=\"category\" placeholder=\"Category\" value= {updatedFormContents[0].category} onChange={handleInputChange} />\n            <input type=\"text\" name=\"amount\" placeholder=\"Amount\" value={updatedFormContents[0].amount} onChange={handleInputChange}/>\n         </form>\n         <Button updatedFormContents={updatedFormContents}/>\n      </>\n   )\n}\n\nexport default Form;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,YAAY,GAAG,CAAC;IACnBC,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE,EAAE;IACfC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE;EACX,CAAC,CAAC;EACF,MAAM,CAACC,mBAAmB,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAACQ,YAAY,CAAC;EAErE,MAAMO,iBAAiB,GAAIC,KAAK,IAAG;IAChC,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpCL,eAAe,CAACM,SAAS,IAAI;MAC1B,MAAMP,mBAAmB,GAAGO,SAAS,CAACC,GAAG,CAACC,IAAI,KAAK;QAChD,GAAGA,IAAI;QACP,CAACL,IAAI,GAAGC;MACX,CAAC,CAAC,CAAC;MACH,MAAMK,WAAW,GAAGC,QAAQ,CAACC,IAAI,CAACZ,mBAAmB,CAAC;MACtD,OAAOA,mBAAmB;IAC7B,CAAC,CAAC;EACL,CAAC;EAED,oBACGV,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBACGvB,OAAA;MAAMwB,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACnBvB,OAAA;QAAAuB,QAAA,EAAQ;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAAA5B,OAAA;QAAO6B,IAAI,EAAC,MAAM;QAACf,IAAI,EAAC,MAAM;QAACgB,WAAW,EAAC,UAAU;QAACf,KAAK,EAAEL,mBAAmB,CAAC,CAAC,CAAC,CAACJ,IAAK;QAACyB,QAAQ,EAAEnB;MAAkB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC9I5B,OAAA;QAAO6B,IAAI,EAAC,MAAM;QAACf,IAAI,EAAC,aAAa;QAACgB,WAAW,EAAC,aAAa;QAACf,KAAK,EAAEL,mBAAmB,CAAC,CAAC,CAAC,CAACH,WAAY;QAACwB,QAAQ,EAAEnB;MAAkB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACzI5B,OAAA;QAAO6B,IAAI,EAAC,MAAM;QAACf,IAAI,EAAC,UAAU;QAACgB,WAAW,EAAC,UAAU;QAACf,KAAK,EAAGL,mBAAmB,CAAC,CAAC,CAAC,CAACF,QAAS;QAACuB,QAAQ,EAAEnB;MAAkB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClI5B,OAAA;QAAO6B,IAAI,EAAC,MAAM;QAACf,IAAI,EAAC,QAAQ;QAACgB,WAAW,EAAC,QAAQ;QAACf,KAAK,EAAEL,mBAAmB,CAAC,CAAC,CAAC,CAACD,MAAO;QAACsB,QAAQ,EAAEnB;MAAkB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvH,CAAC,eACP5B,OAAA,CAACF,MAAM;MAACY,mBAAmB,EAAEA;IAAoB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACpD,CAAC;AAET;AAACxB,EAAA,CAhCQD,IAAI;AAAA6B,EAAA,GAAJ7B,IAAI;AAkCb,eAAeA,IAAI;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}