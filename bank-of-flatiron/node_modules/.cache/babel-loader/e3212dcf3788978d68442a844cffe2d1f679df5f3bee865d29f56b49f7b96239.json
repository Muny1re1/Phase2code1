{"ast":null,"code":"var _jsxFileName = \"/home/andymichael/moringaphase2codechallenges/Phase2code1/bank-of-flatiron/src/components/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Button from \"./Transaction\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Form() {\n  _s();\n  const initialFormContent = {\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: \"\"\n  };\n  const [updatedFormContents, setFormContents] = useState([initialFormContent]);\n  const handleInputChange = (event, index) => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormContents(prevState => {\n      const updatedContents = [...prevState];\n      updatedContents[index] = {\n        ...updatedContents[index],\n        [name]: value\n      };\n      return updatedContents;\n    });\n  };\n  const handleAddNewForm = () => {\n    // Create a copy of the last form content\n    const lastFormContent = {\n      ...updatedFormContents[updatedFormContents.length - 1]\n    };\n    // Check if all fields in the last form are filled\n    if (Object.values(lastFormContent).every(val => val !== \"\")) {\n      // Add the last form content to the updated contents array\n      setFormContents(prevState => [...prevState, lastFormContent]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [updatedFormContents.map((formContent, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          placeholder: \"mm/dd/yy\",\n          value: formContent.date,\n          onChange: event => handleInputChange(event, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"Description\",\n          value: formContent.description,\n          onChange: event => handleInputChange(event, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"category\",\n          placeholder: \"Category\",\n          value: formContent.category,\n          onChange: event => handleInputChange(event, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"amount\",\n          placeholder: \"Amount\",\n          value: formContent.amount,\n          onChange: event => handleInputChange(event, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 16\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleAddNewForm,\n      updatedFormContents: updatedFormContents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n}\n_s(Form, \"q3zNrUb67tG2vsAfWVmMJHSmtgE=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","_s","initialFormContent","date","description","category","amount","updatedFormContents","setFormContents","handleInputChange","event","index","name","value","target","prevState","updatedContents","handleAddNewForm","lastFormContent","length","Object","values","every","val","children","map","formContent","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["/home/andymichael/moringaphase2codechallenges/Phase2code1/bank-of-flatiron/src/components/Form.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"./Transaction\";\n\nfunction Form() {\n   const initialFormContent = {\n      date: \"\",\n      description: \"\",\n      category: \"\",\n      amount: \"\"\n   };\n   const [updatedFormContents, setFormContents] = useState([initialFormContent]);\n\n   const handleInputChange = (event, index) => {\n      const { name, value } = event.target;\n      setFormContents(prevState => {\n         const updatedContents = [...prevState];\n         updatedContents[index] = {\n            ...updatedContents[index],\n            [name]: value\n         };\n         return updatedContents;\n      });\n   }\n\n   const handleAddNewForm = () => {\n      // Create a copy of the last form content\n      const lastFormContent = { ...updatedFormContents[updatedFormContents.length - 1] };\n      // Check if all fields in the last form are filled\n      if (Object.values(lastFormContent).every(val => val !== \"\")) {\n         // Add the last form content to the updated contents array\n         setFormContents(prevState => [...prevState, lastFormContent]);\n      }\n   }\n\n   return (\n      <>\n         {updatedFormContents.map((formContent, index) => (\n            <div key={index}>\n               <form className=\"form\">\n                  <strong>Date:</strong>\n                  <input\n                     type=\"date\"\n                     name=\"date\"\n                     placeholder=\"mm/dd/yy\"\n                     value={formContent.date}\n                     onChange={(event) => handleInputChange(event, index)}\n                  />\n                  <input\n                     type=\"text\"\n                     name=\"description\"\n                     placeholder=\"Description\"\n                     value={formContent.description}\n                     onChange={(event) => handleInputChange(event, index)}\n                  />\n                  <input\n                     type=\"text\"\n                     name=\"category\"\n                     placeholder=\"Category\"\n                     value={formContent.category}\n                     onChange={(event) => handleInputChange(event, index)}\n                  />\n                  <input\n                     type=\"text\"\n                     name=\"amount\"\n                     placeholder=\"Amount\"\n                     value={formContent.amount}\n                     onChange={(event) => handleInputChange(event, index)}\n                  />\n               </form>\n            </div>\n         ))}\n         <Button onClick={handleAddNewForm} updatedFormContents={updatedFormContents} />\n      </>\n   )\n}\n\nexport default Form;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}