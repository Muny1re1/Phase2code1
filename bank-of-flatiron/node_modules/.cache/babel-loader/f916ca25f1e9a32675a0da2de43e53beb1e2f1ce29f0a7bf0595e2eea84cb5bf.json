{"ast":null,"code":"var _jsxFileName = \"/home/andymichael/moringaphase2codechallenges/Phase2code1/bank-of-flatiron/src/components/Form.js\",\n  _s = $RefreshSig$();\n// importing react and use state hook.\nimport React, { useState } from \"react\";\n\n// setting up a function to update the form contents array based on the input of the form.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form({\n  onSubmit\n}) {\n  _s();\n  // setting up the state of the form contents.\n  const [formContent, setFormContents] = useState({\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: \"\"\n  });\n  // coming up with a handleChange function that handles the onChange of each input field and updates the formContent arrays based on the setFormContents.\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormContents({\n      ...formContent,\n      [name]: value\n    });\n  };\n\n  // coming up with a handleSubmit function that handles the onSubmit of the form and updates the formContent arrays based on the setFormContents which activates once an input field is fully filled.\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(formContent);\n    setFormContents({\n      date: \"\",\n      description: \"\",\n      category: \"\",\n      amount: \"\"\n    });\n  };\n  // returning forms with 4 inputs whose names are set to their value type. Each input field also has an onChange attribute which refers the handleChange function.\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Date:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      name: \"date\",\n      value: formContent.date,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 35\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"description\",\n      value: formContent.description,\n      onChange: handleChange,\n      placeholder: \"Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"category\",\n      value: formContent.category,\n      onChange: handleChange,\n      placeholder: \"Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"amount\",\n      value: formContent.amount,\n      onChange: handleChange,\n      placeholder: \"Amount\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      type: \"submit\",\n      children: \"Add Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(Form, \"465ZbjkN3A65LzQaGt0Q23Gdgf0=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Form","onSubmit","_s","formContent","setFormContents","date","description","category","amount","handleChange","e","name","value","target","handleSubmit","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["/home/andymichael/moringaphase2codechallenges/Phase2code1/bank-of-flatiron/src/components/Form.js"],"sourcesContent":["// importing react and use state hook.\nimport React, { useState } from \"react\";\n\n// setting up a function to update the form contents array based on the input of the form.\nfunction Form({ onSubmit }) {\n    // setting up the state of the form contents.\n    const [formContent, setFormContents] = useState({\n        date: \"\",\n        description: \"\",\n        category: \"\",\n        amount: \"\"\n    });\n// coming up with a handleChange function that handles the onChange of each input field and updates the formContent arrays based on the setFormContents.\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormContents({ ...formContent, [name]: value });\n    };\n\n    // coming up with a handleSubmit function that handles the onSubmit of the form and updates the formContent arrays based on the setFormContents which activates once an input field is fully filled.\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit(formContent);\n        setFormContents({\n            date: \"\",\n            description: \"\",\n            category: \"\",\n            amount: \"\"\n        });\n    };\n// returning forms with 4 inputs whose names are set to their value type. Each input field also has an onChange attribute which refers the handleChange function.\n    return (\n        <form className=\"form\" onSubmit={handleSubmit}>\n           <strong>Date:</strong> <input\n                type=\"date\"\n                name=\"date\"\n                value={formContent.date}\n                onChange={handleChange}\n            />\n            <input\n                type=\"text\"\n                name=\"description\"\n                value={formContent.description}\n                onChange={handleChange}\n                placeholder=\"Description\"\n            />\n            <input\n                type=\"text\"\n                name=\"category\"\n                value={formContent.category}\n                onChange={handleChange}\n                placeholder=\"Category\"\n            />\n            <input\n                type=\"text\"\n                name=\"amount\"\n                value={formContent.amount}\n                onChange={handleChange}\n                placeholder=\"Amount\"\n            /><br/>\n            <button className=\"button\" type=\"submit\">Add Transaction</button>\n        </form>\n    );\n}\n\nexport default Form;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,IAAIA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACxB;EACA,MAAM,CAACC,WAAW,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC;IAC5CQ,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE,EAAE;IACfC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE;EACZ,CAAC,CAAC;EACN;EACI,MAAMC,YAAY,GAAIC,CAAC,IAAK;IACxB,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCT,eAAe,CAAC;MAAE,GAAGD,WAAW;MAAE,CAACQ,IAAI,GAAGC;IAAM,CAAC,CAAC;EACtD,CAAC;;EAED;EACA,MAAME,YAAY,GAAIJ,CAAC,IAAK;IACxBA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClBd,QAAQ,CAACE,WAAW,CAAC;IACrBC,eAAe,CAAC;MACZC,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE,EAAE;MACfC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE;IACZ,CAAC,CAAC;EACN,CAAC;EACL;EACI,oBACIT,OAAA;IAAMiB,SAAS,EAAC,MAAM;IAACf,QAAQ,EAAEa,YAAa;IAAAG,QAAA,gBAC3ClB,OAAA;MAAAkB,QAAA,EAAQ;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,KAAC,eAAAtB,OAAA;MAClBuB,IAAI,EAAC,MAAM;MACXX,IAAI,EAAC,MAAM;MACXC,KAAK,EAAET,WAAW,CAACE,IAAK;MACxBkB,QAAQ,EAAEd;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACFtB,OAAA;MACIuB,IAAI,EAAC,MAAM;MACXX,IAAI,EAAC,aAAa;MAClBC,KAAK,EAAET,WAAW,CAACG,WAAY;MAC/BiB,QAAQ,EAAEd,YAAa;MACvBe,WAAW,EAAC;IAAa;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACFtB,OAAA;MACIuB,IAAI,EAAC,MAAM;MACXX,IAAI,EAAC,UAAU;MACfC,KAAK,EAAET,WAAW,CAACI,QAAS;MAC5BgB,QAAQ,EAAEd,YAAa;MACvBe,WAAW,EAAC;IAAU;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACFtB,OAAA;MACIuB,IAAI,EAAC,MAAM;MACXX,IAAI,EAAC,QAAQ;MACbC,KAAK,EAAET,WAAW,CAACK,MAAO;MAC1Be,QAAQ,EAAEd,YAAa;MACvBe,WAAW,EAAC;IAAQ;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eAAAtB,OAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACPtB,OAAA;MAAQiB,SAAS,EAAC,QAAQ;MAACM,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEf;AAACnB,EAAA,CA1DQF,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AA4Db,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}