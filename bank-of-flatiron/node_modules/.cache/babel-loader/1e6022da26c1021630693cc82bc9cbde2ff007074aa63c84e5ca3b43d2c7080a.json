{"ast":null,"code":"var _jsxFileName = \"/home/andymichael/moringaphase2codechallenges/Phase2code1/bank-of-flatiron/src/components/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Button from \"./Transaction\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Form() {\n  _s();\n  const initialFormContent = {\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: \"\"\n  };\n  const [formContents, setFormContents] = useState([initialFormContent]);\n  const [updatedFormContents, setUpdatedFormContents] = useState([initialFormContent]);\n  const handleInputChange = (event, index) => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUpdatedFormContents(prevState => {\n      const updatedContents = prevState.map((form, i) => {\n        if (i === index) {\n          return {\n            ...form,\n            [name]: value\n          };\n        }\n        return form;\n      });\n      return updatedContents;\n    });\n  };\n  const addNewForm = () => {\n    setFormContents(prevState => [...prevState, initialFormContent]);\n    setUpdatedFormContents(prevState => [...prevState, initialFormContent]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [formContents.map((formContent, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          placeholder: \"mm/dd/yy\",\n          value: updatedFormContents[index].date,\n          onChange: event => handleInputChange(event, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"Description\",\n          value: updatedFormContents[index].description,\n          onChange: event => handleInputChange(event, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"category\",\n          placeholder: \"Category\",\n          value: updatedFormContents[index].category,\n          onChange: event => handleInputChange(event, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"amount\",\n          placeholder: \"Amount\",\n          value: updatedFormContents[index].amount,\n          onChange: event => handleInputChange(event, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 16\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addNewForm,\n      children: \"Add New Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      updatedFormContents: updatedFormContents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n}\n_s(Form, \"HzYkALrFbthwHMdtnToWF6JCbc8=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","_s","initialFormContent","date","description","category","amount","formContents","setFormContents","updatedFormContents","setUpdatedFormContents","handleInputChange","event","index","name","value","target","prevState","updatedContents","map","form","i","addNewForm","children","formContent","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["/home/andymichael/moringaphase2codechallenges/Phase2code1/bank-of-flatiron/src/components/Form.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"./Transaction\";\n\nfunction Form() {\n   const initialFormContent = {\n      date: \"\",\n      description: \"\",\n      category: \"\",\n      amount: \"\"\n   };\n\n   const [formContents, setFormContents] = useState([initialFormContent]);\n   const [updatedFormContents, setUpdatedFormContents] = useState([initialFormContent]);\n\n   const handleInputChange = (event, index) => {\n      const { name, value } = event.target;\n      setUpdatedFormContents(prevState => {\n         const updatedContents = prevState.map((form, i) => {\n            if (i === index) {\n               return {\n                  ...form,\n                  [name]: value\n               };\n            }\n            return form;\n         });\n         return updatedContents;\n      });\n   }\n\n   const addNewForm = () => {\n      setFormContents(prevState => [...prevState, initialFormContent]);\n      setUpdatedFormContents(prevState => [...prevState, initialFormContent]);\n   }\n\n   return (\n      <>\n         {formContents.map((formContent, index) => (\n            <div key={index}>\n               <form className=\"form\">\n                  <strong>Date:</strong>\n                  <input\n                     type=\"date\"\n                     name=\"date\"\n                     placeholder=\"mm/dd/yy\"\n                     value={updatedFormContents[index].date}\n                     onChange={(event) => handleInputChange(event, index)}\n                  />\n                  <input\n                     type=\"text\"\n                     name=\"description\"\n                     placeholder=\"Description\"\n                     value={updatedFormContents[index].description}\n                     onChange={(event) => handleInputChange(event, index)}\n                  />\n                  <input\n                     type=\"text\"\n                     name=\"category\"\n                     placeholder=\"Category\"\n                     value={updatedFormContents[index].category}\n                     onChange={(event) => handleInputChange(event, index)}\n                  />\n                  <input\n                     type=\"text\"\n                     name=\"amount\"\n                     placeholder=\"Amount\"\n                     value={updatedFormContents[index].amount}\n                     onChange={(event) => handleInputChange(event, index)}\n                  />\n               </form>\n            </div>\n         ))}\n         <button onClick={addNewForm}>Add New Form</button>\n         <Button updatedFormContents={updatedFormContents}/>\n      </>\n   )\n}\n\nexport default Form;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}